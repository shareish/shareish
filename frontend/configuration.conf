worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80;
        listen [::]:80;
        client_max_body_size 25M;

        server_name shareish.org;
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://shareish.org$request_uri;
        }
    }

    server {
        listen 443 default_server ssl http2;
        listen [::]:443 ssl http2;
        client_max_body_size 25M;

        server_name shareish.org;

        ssl_certificate /etc/letsencrypt/live/shareish.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/shareish.org/privkey.pem;

        #Backend requests -> passed to the web server
        location /api/v1/ {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            proxy_pass http://web:8000;
        }

        #Access to the admin panel -> pass to the web server
        location /admin {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            proxy_pass http://web:8000;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
        }

        #Access to media files. Since the media volume is shared between the ui container and
        #the web container, the request is aliased to the ui.
        location /media/ {
            alias /app/web/mediafiles/;
        }

        #Web socket passed to the web server.
        location /ws {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            proxy_pass http://web:8000;
            proxy_redirect off;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        } 

        # Frontend
        location / {
            root   /usr/share/nginx/html;
            index  index.html;

            try_files $uri $uri/ /index.html;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

    # server {
    #     listen       80;
    #     listen [::]:80;
    #     client_max_body_size 5M;

    #     server_name shareish.org;

    #     #Backend requests -> passed to the web server
    #     location /api/v1/ {
    #         add_header 'Access-Control-Allow-Origin' "$http_origin" always;
    #         proxy_pass http://web:8000;
    #     }

    #     #Access to the admin panel -> pass to the web server
    #     location /admin {
    #         add_header 'Access-Control-Allow-Origin' "$http_origin" always;
    #         proxy_pass http://web:8000;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header Host $host;
    #         proxy_redirect off;
    #     }

    #     #Access to media files. Since the media volume is shared between the ui container and
    #     #the web container, the request is aliased to the ui.
    #     location /media/ {
    #         alias /app/web/mediafiles/;
    #     }

    #     #Web socket passed to the web server.
    #     location /ws {
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header Host $http_host;
    #         proxy_set_header X-NginX-Proxy true;

    #         proxy_pass http://web:8000;
    #         proxy_redirect off;

    #                 proxy_http_version 1.1;
    #             proxy_set_header Upgrade $http_upgrade;
    #             proxy_set_header Connection "upgrade";
    #     } 

    #     # Frontend
    #     location / {
    #         root   /usr/share/nginx/html;
    #         index  index.html;

    #         try_files $uri $uri/ /index.html;
    #     }
    #     error_page   500 502 503 504  /50x.html;
    #     location = /50x.html {
    #         root   /usr/share/nginx/html;
    #     }
    # }
}
