# docker-compose build
version: '3.9'
volumes:
  postgis-data:
  media_volume:
  static_volume:

services:
  db:
    image: postgis/postgis:14-3.2
    volumes:
      - postgis-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped

  web:
    build: backend
    volumes:
      - ./backend:/code
      - media_volume:/code/mediafiles
      - static_volume:/static
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
    restart: unless-stopped

  ui:
    build:
      context: frontend
      target: production-stage
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - media_volume:/app/web/mediafiles
      - static_volume:/app/web/static
      - /etc/letsencrypt:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    restart: unless-stopped

#  certbot:
#    image: certbot/certbot:latest
#    volumes:
#      - ./certbot/www/:/var/www/certbot/:rw
#      - ./certbot/conf/:/etc/letsencrypt/:rw
