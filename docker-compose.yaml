# version: "3.9"
   
# services:
#   db:
#     image: postgres
#     volumes:
#       - ./data/db:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=postgres
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres

#   postgis:
#     image: postgis/postgis:14-3.2
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
  
#   web:
#     build: .
#     command: python manage.py runserver 0.0.0.0:8000
#     volumes:
#       - .:/code
#     ports:
#       - ":7999"
#     environment:
#       - POSTGRES_NAME=postgres
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#     depends_on:
#       - db


# docker-compose build
version: '3.9'
volumes:
  postgis-data:

services:
  db:
    image: postgis/postgis:14-3.2
    volumes:
      - postgis-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped

  web:
    build: backend
    volumes:
      - ./backend:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
    restart: unless-stopped

  ui:
    build:
      context: frontend
      target: production-stage #dev-stage
    volumes:
      - ./frontend:/app
    ports: # App is running on port 8081
      - "80:80"
    restart: unless-stopped